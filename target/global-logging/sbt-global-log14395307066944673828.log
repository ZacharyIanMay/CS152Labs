[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ianma\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ianma\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 11.0.14)
[debug]       Load.loadUnit: plugins took 132.5947ms
[debug]       Load.loadUnit: defsScala took 0.5712ms
[debug] [Loading] Scanning directory C:\Users\ianma\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ianma\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.0286 ms
[debug]           Load.resolveProject(global-plugins) took 64.5794ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ianma\.sbt\1.0\plugins, plugins: List(<none>))) took 120.23ms
[debug] [Loading] Done in C:\Users\ianma\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 153.185399ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.347199ms
[debug]     Load.loadUnit(file:/C:/Users/ianma/.sbt/1.0/plugins/, ...) took 302.147801ms
[debug]   Load.apply: load took 536.049901ms
[debug]   Load.apply: resolveProjects took 10.7276ms
[debug]   Load.apply: finalTransforms took 85.2782ms
[debug]   Load.apply: config.delegates took 13.1607ms
[debug]   Load.apply: Def.make(settings)... took 872.5552ms
[debug]   Load.apply: structureIndex took 150.865501ms
[debug]   Load.apply: mkStreams took 2.0544ms
[info] loading global plugins from C:\Users\ianma\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 15366.630901ms
[debug]           Load.loadUnit: plugins took 31.719399ms
[debug]           Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\ianma\IdeaProjects\CS152Test\project
[debug]             Load.loadUnit: mkEval took 13.7318ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ianma\IdeaProjects\CS152Test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.071101 ms
[info] loading settings for project cs152test-build from idea.sbt ...
[debug]               Load.resolveProject(cs152test-build) took 8.3323ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs152test-build, base: C:\Users\ianma\IdeaProjects\CS152Test\project, plugins: List(<none>))) took 31.6325ms
[debug] [Loading] Done in C:\Users\ianma\IdeaProjects\CS152Test\project, returning: (cs152test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6033.8033ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.055101ms
[debug]         Load.loadUnit(file:/C:/Users/ianma/IdeaProjects/CS152Test/project/, ...) took 6076.8315ms
[debug]       Load.apply: load took 6079.8192ms
[debug]       Load.apply: resolveProjects took 0.1608ms
[debug]       Load.apply: finalTransforms took 20.5425ms
[debug]       Load.apply: config.delegates took 0.5244ms
[debug]       Load.apply: Def.make(settings)... took 116.1501ms
[debug]       Load.apply: structureIndex took 40.7311ms
[debug]       Load.apply: mkStreams took 0.002499ms
[info] loading project definition from C:\Users\ianma\IdeaProjects\CS152Test\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7905.187999ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\ianma\IdeaProjects\CS152Test
[debug]       Load.loadUnit: mkEval took 0.3362ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 12.8885 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 44.1148ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ianma\IdeaProjects\CS152Test, plugins: List(<none>))) took 59.185401ms
[debug] [Loading] Done in C:\Users\ianma\IdeaProjects\CS152Test, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1633.9247ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.561499ms
[debug]   Load.loadUnit(file:/C:/Users/ianma/IdeaProjects/CS152Test/, ...) took 9548.119599ms
[debug] Load.apply: load took 9550.9892ms
[debug] Load.apply: resolveProjects took 0.1381ms
[debug] Load.apply: finalTransforms took 30.7733ms
[debug] Load.apply: config.delegates took 1.446199ms
[debug] Load.apply: Def.make(settings)... took 114.4454ms
[debug] Load.apply: structureIndex took 59.924699ms
[debug] Load.apply: mkStreams took 0.002601ms
[info] set current project to CS152Test (in build file:/C:/Users/ianma/IdeaProjects/CS152Test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54026 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54026, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS152Test (in build file:/C:/Users/ianma/IdeaProjects/CS152Test/)
[debug] > Exec(idea-shell, None, None)
